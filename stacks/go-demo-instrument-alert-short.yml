version: '3'

services:

  main:
    image: vfarcic/go-demo
    environment:
      - DB=db
    networks:
      - proxy
      - monitor
    deploy:
      replicas: 4
      update_config:
        parallelism: 1
        delay: 10s
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.servicePath=/demo
        - com.df.port=8080
        - com.df.scaleMin=2
        - com.df.scaleMax=7
        - com.df.scaleDownBy=1
        - com.df.scaleUpBy=2
        - com.df.scrapePort=8080
        - com.df.alertName.1=resptimeabove
        - com.df.alertIf.1=@resp_time_above:0.1,5m,0.99
        - com.df.alertName.2=resptimebelow_unless_resptimeabove
        - com.df.alertIf.2=(sum(rate(http_server_resp_time_bucket{job="go-demo_main",le="0.025"}[5m])) / sum(rate(http_server_resp_time_count{job="go-demo_main"}[5m])) > 0.75) unless (sum(rate(http_server_resp_time_bucket{job="go-demo_main",le="0.1"}[5m])) / sum(rate(http_server_resp_time_count{job="go-demo_main"}[5m])) < 0.99)
        - com.df.alertLabels.2=receiver=system,service=go-demo_main,scale=down,type=service
        - com.df.alertAnnotations.2=summary=Response time of service go-demo_main is below 0.025 and not above 0.1
      resources:
        reservations:
          memory: 5M
        limits:
          memory: 10M

  db:
    image: mongo
    networks:
      - proxy
    deploy:
      resources:
        reservations:
          memory: 40M
        limits:
          memory: 80M

networks:
  proxy:
    external: true
  monitor:
    external: true
